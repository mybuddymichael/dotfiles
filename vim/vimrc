set nocompatible                  " Must come first because it changes other options.

call pathogen#runtime_append_all_bundles()
call pathogen#helptags()          " Load pathogen bundles and generate docs.

syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.

runtime macros/matchit.vim        " Load the matchit plugin.

let mapleader=","                 " Change leader key from \ to ,

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set number                        " Show line numbers.
set numberwidth=5                 " Line numbers are at least 5 characters wide.
set ruler                         " Show cursor position.
set cursorline                    " Show the cursor's line.
"set cursorcolumn                  " Show the curser's column.
set colorcolumn=85                " Show a column at 85 so I don't overtype.
:nnoremap <leader>c<cr> :set cursorline! cursorcolumn!<cr>

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=$HOME/.vim/tmp//,.  " Keep swap files in one location

set tabstop=4                     " Global tab width.
set shiftwidth=4                  " And again, related.
"set expandtab                    " Use spaces instead of tabs

set laststatus=2                  " Show the status line all the time

" Invisibles toggling and formatting.
nmap <leader>l :set list!<CR>
set listchars=tab:▸\ ,trail:·,extends:…,precedes:…,eol:¬
set nolist

" Set wrap settings and create :Wrap command.
set wrap
set linebreak
command! -nargs=* Wrap set wrap linebreak nolist
set showbreak=…

" Open NERDTree
map <leader>n :NERDTree<CR>

" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

" Map alignment shortcuts.
if exists(":Tabularize")
	nmap <leader>a= :Tabularize /=<CR>
	vmap <leader>a= :Tabularize /=<CR>
	nmap <leader>a: :Tabularize /:\zs<CR>
	vmap <leader>a: :Tabularize /:\zs<CR>
endif

" Set tabstop, softtabstop and shiftwidth to the same value
command! -nargs=* Stab call Stab()
function! Stab()
	let l:tabstop = 1 * input('set tabstop = softtabstop = shiftwidth = ')
	if l:tabstop > 0
		let &l:sts = l:tabstop
		let &l:ts = l:tabstop
		let &l:sw = l:tabstop
	endif
	call SummarizeTabs()
endfunction
 
function! SummarizeTabs()
	try
		echohl ModeMsg
		echon 'tabstop='.&l:ts
		echon ' shiftwidth='.&l:sw
		echon ' softtabstop='.&l:sts
		if &l:et
			echon ' expandtab'
		else
			echon ' noexpandtab'
		endif
	finally
		echohl None
	endtry
endfunction


" Colorscheme.
colorscheme wombat

" Tab mappings.
map <leader>tt :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>to :tabonly<cr>
map <leader>tn :tabnext<cr>
map <leader>tp :tabprevious<cr>
map <leader>tf :tabfirst<cr>
map <leader>tl :tablast<cr>
map <leader>tm :tabmove

" Uncomment to use Jamis Buck's file opening plugin
"map <Leader>t :FuzzyFinderTextMate<Enter>

" Controversial...swap colon and semicolon for easier commands
"nnoremap ; :
"nnoremap : ;

"vnoremap ; :
"vnoremap : ;

" Automatic fold settings for specific files. Uncomment to use.
" autocmd FileType ruby setlocal foldmethod=syntax
" autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2
