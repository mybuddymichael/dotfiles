# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

format = "$directory${custom.jj}$git_metrics$bun$golang\n$character"

# Inserts a blank line between shell prompts
add_newline = false

# Replace the '❯' symbol in the prompt with '➜'
[character] # The name of the module we are configuring is 'character'
success_symbol = '[→](bold green)' # The 'success_symbol' segment is being set to '➜' with the color 'bold green'
error_symbol = '[→](bold red)'

[bun]
format = '[$symbol($version)]($style) '
style = 'purple'
symbol = 'Bun '

[directory]
style = 'cyan'
truncation_length = 1
fish_style_pwd_dir_length = 1

[git_metrics]
disabled = false
added_style = 'underline green'
deleted_style = 'underline red'

[golang]
symbol = 'Go '
style = 'blue'
format = '[$symbol($version)]($style) '

[custom.jj]
description = "The status of jujutsu"
detect_folders = ['.jj']
format = '[$output]($style) '
style = ''
shell = 'bash'
ignore_timeout = true
command = '''
status=$(jj st --no-pager 2>/dev/null)

# Check if working copy is clean
if echo "$status" | grep -q "The working copy has no changes"; then
  printf "\033[37mG\033[0m"  # Green for clean
else
  # Parse the working copy changes section
  changes=$(echo "$status" | sed -n '/Working copy changes:/,/Working copy/p' | grep "^[AMDR] ")
  
  # Count files for each status in single pass
  counts=$(echo "$changes" | awk '/^A / {a++} /^M / {m++} /^D / {d++} /^R / {r++} END {print (a+0)" "(m+0)" "(d+0)" "(r+0)}')
  read added_count modified_count deleted_count renamed_count <<< "$counts"
  
  # Build colored output
  colored=""
  if [ "$added_count" -gt 0 ]; then
    colored="${colored}\033[4;32mA${added_count}\033[0m"
  fi
  
  if [ "$modified_count" -gt 0 ]; then
    colored="${colored} \033[4;33mM${modified_count}\033[0m"
  fi
  
  if [ "$deleted_count" -gt 0 ]; then
    colored="${colored} \033[4;31m-${deleted_count}\033[0m"
  fi
  
  if [ "$renamed_count" -gt 0 ]; then
    colored="${colored} \033[4;35m→${renamed_count}\033[0m"
  fi
  
  printf "$colored"
fi
'''
